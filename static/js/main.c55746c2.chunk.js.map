{"version":3,"sources":["views/security/images/safety.svg","views/header/Header.jsx","views/overview/Overview.jsx","views/health/Health.jsx","views/inclusion/Inclusion.jsx","views/security/Security.jsx","components/mobility-dashboard/MobilityDashboard.jsx","App.js","serviceWorker.js","index.js","views/health/images/dust.svg","views/health/images/pollution.svg","views/health/images/air-pollution.svg","views/health/images/pm10.svg","views/overview/img/population.svg","views/overview/img/area.svg","views/overview/img/distance.svg","views/overview/img/seats.svg","views/overview/img/ridership.svg","views/overview/img/bus.svg","views/health/images/bicycle.svg","views/health/images/dog.svg","views/health/images/health.svg","views/security/images/street-light.svg","views/security/images/road.svg","views/security/images/car.svg"],"names":["module","exports","Header","props","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","FormControl","variant","margin","InputLabel","htmlFor","Select","native","onChange","e","callback","label","inputProps","name","res","cityList","forEach","v","idx","push","key","value","populateCities","Overview","cityState","cityNameState","console","log","area","Area","avg_daily_ridership","Ridership","bus_fleet","Bus","population","Pop","road_length","Len","seats_per_lakh","Seats","data","Object","keys","o","norm_value","src","toFixed","overallStats","overall","Health","cityStatic","state","labels","health","active_mobility","x","datasets","backgroundColor","y","scatterState","class","options","title","display","fontSize","legend","position","scales","xAxes","ticks","tick","index","CycleImg","FootImg","percent_roads_are_cyclepath","percent_roads_are_footpath","cyclePath","replace","cycleTrackBenchmark","result","footpathBenchmark","HealthImg","health_expense_relative","relativeTerm","Math","abs","getHealthExpenseReport","norm_health_ex_vs_pcf","ex_hh","city_list","prepareScatterParkFootExpenditureData","plugins","ChartAnnotation","responsive","text","scaleLabel","labelString","yAxes","tooltips","callbacks","tooltipItem","xLabel","yLabel","annotation","annotations","mode","scaleID","borderColor","borderWidth","content","enabled","href","target","no2","avg_annual_pollution","NO2","pm25","pm10","PM10","so2","SO2","Inclusion","internalState","spend_per_km_road","scatterSeatsSlumState","seatSlumData","mean_seats","mean_slum","cnt","no_people_in_slums","prepareScatterDataSeatsSlums","spend","equality","mean_spend_per_km_road","spendingCredit","public_transport_ridership","annual_hh_expenditure","prepareScatterData","mean_annual_hh_expenditure","mean_public_transport_ridership","hh","hh_mean","rider","rider_mean","ridershipExpenseCredit","scatterDataSeatsSlums","seats","seats_mean","mean_seats_per_lakh","slum","slum_mean","mean_no_people_in_slums","seatsSlumCredit","Security","pieState","hoverBackgroundColor","safety","percent_road_acc_fatalities","car","alt","lightNetwork","percent_light_road_length","streetLight","lightNetworkLength","crimes_against_women","percent_roads_w_lights","roadAccident","roadSafety","roadAccidentDeath","MobilityDashboard","useState","setCityState","setCityNameState","static","role","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c55746c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/safety.ae8ff4a8.svg\";","import React from 'react'\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport './Header.scss'\n\nfunction Header(props) {\n    function populateCities() {\n        let res = []\n        props.cityList.forEach((v, idx) => {\n            res.push(\n                <option key={idx} value={v}>{v}</option>\n            )\n        })\n        return res\n    }\n    return(\n        <header className=\"container Header\">\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                \n                    {/* <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <div className=\"dropdown\">\n                                <div className=\"dropdown-button\">\n                                    <Link to=\"#\">Learn</Link>\n                                </div>\n                                <div className=\"dropdown-content\">\n                                    <Link to=\"/sd\">What is Social Distancing?</Link>\n                                    <Link to=\"/sq\">How one should practice Self Quarantine</Link>\n                                    <a href=\"https://www.mohfw.gov.in/pdf/Mask-Eng.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to wear a mask?</a>\n                                    <a href=\"https://www.mohfw.gov.in/pdf/FINAL_14_03_2020_ENg.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to get tested for covid-19?</a>\n                                </div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"dropdown\">\n                                <div className=\"dropdown-button\">\n                                    <Link to=\"#\">Get Help</Link>\n                                </div>\n                                <div className=\"dropdown-content\">\n                                    <Link to=\"\">WHO</Link>\n                                    <Link to=\"\">Ministry of Health</Link>\n                                </div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"dropdown\">\n                                <div className=\"dropdown-button\">\n                                    <Link to=\"/us\">Contribute</Link>\n                                </div>\n                                <div className=\"dropdown-content\">\n                                    <Link to=\"/us\">Get involved with us</Link>\n                                    <Link to=\"/funds\">Active Funds</Link>\n                                    <Link to=\"/volunteer\">Volunteer</Link>\n                                </div>\n                            </div>\n                        </li>\n                        <li>\n                            <Link to=\"/stories\">Citizen Stories</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/simulation\">Simulation</Link>\n                        </li>\n                        \n                        \n                        \n                        \n                    </ul> */}\n                        {/* Language:\n                        <select onChange={(e) => this.changeLanguage(e, this.props.i18n)} defaultValue={this.props.i18n.language}>\n                            <option value=\"en\">English</option>\n                            <option value=\"in_urd\">اردو</option>\n                            <option value=\"in_hi\">हिंदी</option>\n                            <option value=\"in_knn\">ಕೆನಡಾ</option>\n                            <option value=\"in_tam\">தமிழ்</option>\n                            <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                            <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                        </select> */}\n                        <FormControl variant=\"outlined\" className=\"header-box\" margin='dense'>\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">City</InputLabel>\n                            <Select\n                                native\n                                onChange={(e) => props.callback(e)}\n                                label=\"City\"\n                                inputProps={{\n                                    name: 'city',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                            {populateCities()}\n                            </Select>\n                        </FormControl>\n\n                    {/* <div>\n                        <TextField\n                            label=\"District\"\n                            id=\"outlined-size-small\"\n                            defaultValue=\"\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            className=\"header-text header-box\"\n                        />\n                    </div> */}\n\n\n                </div>\n            </nav>\n            \n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react'\n\nimport Pop from './img/population.svg'\nimport Area from './img/area.svg'\nimport Len from './img/distance.svg'\nimport Seats from './img/seats.svg'\nimport Ridership from './img/ridership.svg'\nimport Bus from './img/bus.svg'\n\nimport './Overview.scss'\n\nfunction Overview(props) {\n    const cityState = props.cityState\n    const cityNameState = props.cityNameState\n\n    console.log(cityState)\n\n    const label = {\n        area: [\"City Area\", \"Sq Km Area\", 0, Area],\n        avg_daily_ridership: [\"Public Bus Ridership\", \"Nos\", 0, Ridership],\n        bus_fleet: [\"No of public buses\", \"Nos\", 0, Bus],\n        population: [\"Population\", \"Lakh People\", 2, Pop],\n        road_length: [\"Road Network Length\", \"Km\", 2, Len],\n        seats_per_lakh: [\"Seats in public transport\", \"Seats\", 0, Seats]\n    }\n\n    function overallStats(data) {\n        let res = []\n        Object.keys(data).forEach((o, idx) => {\n            if(data[o] == null || data[o] == 0) {\n                return\n            }\n            let norm_value = 0\n            if(o === 'population') {\n                norm_value = data[o] / 1e5\n            } else {\n                norm_value = data[o]\n            }\n            res.push(\n                <div key={idx} className=\"col-md-3\">\n                    <div className=\"card\">\n                        <small>{label[o][0]}</small>\n                        <img src={label[o][3]}/>\n                        <h3 className=\"digits\">{norm_value.toFixed(label[o][2])}</h3>\n                        <p>{label[o][1]}</p> \n                    </div>\n                </div>\n            )\n        })\n        return res\n    }\n\n    return (\n        <section className=\"Overview\">\n            <div className=\"city-facts\">\n                {/* <h2>Do you know that Delhi has the largest road network with total road length {cityState.overall.road_length} kms?</h2><br/>\n\n                <h2>but it also has the highest fatality rate of XX %</h2> */}\n\n                <h2>Let's start by knowing {cityNameState}</h2>\n                \n                <div className=\"container\">\n                    <div className=\"row\">\n                        {overallStats(cityState.overall)}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Overview;\n","import React from 'react'\nimport {HorizontalBar} from 'react-chartjs-2';\nimport {Scatter} from 'react-chartjs-2';\nimport * as ChartAnnotation from 'chartjs-plugin-annotation'\n\nimport pm25 from './images/dust.svg';\nimport so2 from './images/pollution.svg'\nimport no2 from './images/air-pollution.svg'\nimport pm10 from './images/pm10.svg'\n\nimport CycleImg from './images/bicycle.svg'\nimport FootImg from './images/dog.svg'\nimport HealthImg from './images/health.svg'\n\nimport './Health.scss';\n\nfunction Health(props) {\n    const cityState = props.cityState\n    const cityNameState = props.cityNameState\n    const cityStatic = props.cityStatic\n    const data = props.data\n\n\n    const state = {\n        labels: cityState.health.active_mobility.x , \n        datasets: [\n          {\n            label: cityNameState,\n            backgroundColor: '#f6264c',\n            data: cityState.health.active_mobility.y\n          }\n        ]\n    }\n\n    const scatterState = {\n        datasets: [{\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    function footpathBenchmark() {\n        if (cityState.health['percent_roads_are_footpath']===null) return;\n        var result=''\n        if(cityState.health['percent_roads_are_footpath']>30) {\n            result = cityStatic.percent_roads_are_footpath[0].replace('[0]', cityNameState)\n        } \n        else if(cityState.health['percent_roads_are_footpath']<=30 && cityState.health['percent_roads_are_footpath']>20) {\n            result = cityStatic.percent_roads_are_footpath[1].replace('[0]', cityNameState)\n        }\n        else if(cityState.health['percent_roads_are_footpath']<=20 && cityState.health['percent_roads_are_footpath']>10) {\n            result = cityStatic.percent_roads_are_footpath[2].replace('[0]', cityNameState)\n        }\n        else if(cityState.health['percent_roads_are_footpath']<=10) {\n            result = cityStatic.percent_roads_are_footpath[3].replace('[0]', cityNameState)\n        }\n        return result\n    }\n\n    function cycleTrackBenchmark() {\n        let cyclePath = cityState.health['percent_roads_are_cyclepath']\n        if (cyclePath===null) {\n            return 'Zero!! That\\'s strange. Hopefully we can obtain this data someday.'\n        } else if(cyclePath > 100) {\n            return cityStatic.percent_roads_are_cyclepath[0].replace('[0]', cityNameState)} \n        else if(cyclePath <= 75 && cyclePath > 50) {\n            return cityStatic.percent_roads_are_cyclepath[1].replace('[0]', cityNameState)}\n        else if(cyclePath <= 50 && cyclePath > 25) {\n            return cityStatic.percent_roads_are_cyclepath[2].replace('[0]', cityNameState)}\n        else if(cyclePath <= 25) {\n            return cityStatic.percent_roads_are_cyclepath[3].replace('[0]', cityNameState)}\n\n    }\n\n    function prepareScatterParkFootExpenditureData() {\n        let res= []\n        let cityList = []\n\n        data.overall.norm_health_ex_vs_pcf.x.forEach((v, idx) => {\n            let ex_hh = data.overall.norm_health_ex_vs_pcf.y[idx]\n            if(v === null || ex_hh == null) {\n                return\n            }\n            res.push({\n                'y': ex_hh,\n                'x': v\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        scatterState['labels'] = cityList\n        scatterState.datasets[0]['data'] = res\n\n        return scatterState\n    }\n\n    function getHealthExpenseReport() {\n        let health_expense_relative = cityState.health.health_expense_relative\n        let relativeTerm = 'more'\n        if(health_expense_relative === null || health_expense_relative == 0) {\n            return <h3>Sorry, we don't have this data for now.</h3>\n        } else if(health_expense_relative < 0) {\n            relativeTerm = 'less'\n        }\n        return <h3>{cityNameState}’s residents spend <span className=\"imp-unit\">Rs {Math.abs(health_expense_relative).toFixed(2)} {relativeTerm}</span> than the average household in other smart cities on health annually.</h3>\n    }\n\n    return(\n        <section class=\"tab-content-box\">\n            <div className=\"chart\">\n                <div className=\"container\">\n                    \n                    <section className=\"sub-section-container\">\n                        <h1>Is your city built for active mobility?</h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\" id=\"bar-chart\">\n                                <HorizontalBar\n                                data = {state}\n                                options={{\n                                    title:{\n                                        display:false,\n                                        fontSize:20\n                                    },\n                                    legend:{\n                                        display:false,\n                                        position:'top'\n                                    },\n                                    scales: {\n                                        xAxes: [{\n                                            type: 'logarithmic',\n                                            ticks: {\n                                                callback: function(tick, index, ticks) {\n                                                    return tick\n                                                }\n                                            }\n                                        }]\n                                    }\n                                }}\n                                />\n                            </div>\n                            <div className=\"col-md-6\" id=\"bar-chart\">\n                                <div className=\"vertical-middle\">\n                                    <h4>{cityNameState} has {cityState.health.active_mobility.y[0]} kms of road network out of which <span className=\"imp-unit\">{cityState.health.active_mobility.y[1]} kms is footpath</span> and {cityState.health.active_mobility.y[2] || '0 (strange)'} kms is cycletrack</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row icon-container\">\n                            <div className=\"col-md-6\">\n                                <img src={CycleImg}/>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <img src={FootImg}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h3><span className=\"cycle-track-percentage\">{cityNameState}</span> has <span className=\"cycle-track-percentage imp-unit\">{(cityState.health.percent_roads_are_cyclepath || 0).toFixed(2)}%</span> of road network covered by cycle tracks.</h3>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h3><span className=\"footpath-percentage\">{cityNameState}</span> has <span className=\"imp-unit footpath-percentage\">{(cityState.health.percent_roads_are_footpath || 0).toFixed(2)}%</span> of road network covered by footpaths.</h3>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h4>{cycleTrackBenchmark()}</h4>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h4>{footpathBenchmark()}</h4>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n                    <section className=\"sub-section-container\">\n                        <h1>Move more, save more!</h1> \n                        <h3>An active lifestyle is shown to reduce expenditure on health!</h3>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 icon-container\">\n                                <img src={HealthImg}/>\n                            </div>\n                            <div className=\"col-md-6\">\n                                {getHealthExpenseReport()}\n                            </div>\n                        </div>\n                        <Scatter\n                            data={prepareScatterParkFootExpenditureData()}\n                            plugins={ChartAnnotation}\n                            options={{\n                                responsive:true,\n                                title:{\n                                    display:true,\n                                    text:'Active Spaces in a city Annual Household Expenditure vs (parks, cycle tracks, foot paths)',\n                                    fontSize: 12\n                                },\n                                legend:{\n                                    display: false,\n                                    position:'top'\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Normalised Score combining no. of parks, footpath and cycle track length',\n                                        }\n                                    }],\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Normalised Annual Health Expenditure',\n                                        }\n                                    }]\n                                },\n                                tooltips: {\n                                    callbacks: {\n                                        label: function(tooltipItem, data) {\n                                            var label = data.labels[tooltipItem.index];\n                                            return label + ': (Ridership: ' + tooltipItem.xLabel + ', HH Expense: ' + tooltipItem.yLabel + ')';\n                                        }\n                                    }\n                                },\n                                annotation: {\n                                    annotations: [\n                                        {\n                                            // drawTime: \"afterDatasetsDraw\",\n                                            // id: \"hline\",\n                                            type: \"line\",\n                                            mode: \"horizontal\",\n                                            scaleID: \"y-axis-1\",\n                                            value: 0,\n                                            borderColor: \"black\",\n                                            borderWidth: 1,\n                                            label: {\n                                                backgroundColor: \"red\",\n                                                content: \"Mean Expenditure\",\n                                                enabled: false\n                                            }\n                                        },\n                                        {\n                                            // drawTime: \"afterDatasetsDraw\",\n                                            // id: \"hline\",\n                                            type: \"line\",\n                                            mode: \"vertical\",\n                                            scaleID: \"x-axis-1\",\n                                            value: 0,\n                                            borderColor: \"black\",\n                                            borderWidth: 1,\n                                            label: {\n                                                backgroundColor: \"red\",\n                                                content: \"Mean Ridership\",\n                                                enabled: false\n                                            }\n                                        }\n                                    ]\n                                }\n                            }}\n                        />\n                        <div className=\"short-excerpt\">\n                            <h3>Here’s a short excerpt for you</h3>\n                            <div className=\"row\">\n                                \n                                <div className=\"col-md-6 right-aligned\">\n                                    <h5>Promotion of walking and cycling in cities requires a multi-pronged approach which involves policy, planning, design and implementation. Some of the actionable steps taken by leading cities across the world which can help promote NMT usage are:</h5>\n                                    <small>Source: Ministry of Housing and Urban Affairs</small>\n                                </div>\n                                <div className=\"col-md-6 left-aligned\">\n                                    <ul>\n                                        <li>Provision of dedicated, high quality and user friendly facilities such as shaded pedestrian pathways and cycle tracks supported by public amenities.</li>\n                                        <li>Provision of a safe and secure environment such as parking of bicycles, street lighting and organized spaces for the informal sector.</li>\n                                        <li>Integration of walking and cycling facilities with transit.</li>\n                                        <li>Planning for compact and walkable neighbourhoods with mixed land uses.</li>\n                                        <li>Leveraging public events such as Car Free Day, Raahgiri, and other similar initiatives to promote the message of sustainable transportation.</li>\n                                        <li>Disincentivise usage of motorised modes by making motorists pay the full societal costs of their transport.</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <a href=\"http://mohua.gov.in/upload/uploadfiles/files/NMTGuidanceFINAL.pdf\" target=\"_blank\"><h3>Check out these guidelines to build a healthier city!</h3></a>\n                    </section>\n\n                    <section className=\"sub-section-container\">\n                        <h1>Breath Easy with Green Mobility</h1>\n                        <h3>Investment in greener transport systems can improve the quality of air we breathe and help us live longer, healthier lives!</h3>\n\n                        <div className=\"chart\">\n\n                            <div className=\"container\">\n                                <div className=\"row pollution-cards\">\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card \">\n                                            <div className=\"card-image\">\n                                                <img src={no2}></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution.NO2}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>NO2</p> \n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <img src={pm25} ></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution['PM2.5']}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>PM2.5</p> \n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <img src={pm10} ></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution.PM10}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>PM10</p> \n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <img src={so2} ></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution.SO2.toFixed(0)}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>SO2</p> \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </section>\n                </div>\n            </div>\n            \n            {/* <div id=\"chart\">\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"scatter\" height={350} />\n            </div> */}\n\n            <div className=\"chart\">\n                <h3 className=\"data\">Move more, save more!</h3>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            Image <br></br> \n                            You have 4th highest # of parks \n                        </div>\n                        <div className=\"col-md-6\">\n                            Image <br></br>\n                            You have 4th _____________\n                        </div>\n                    </div>\n                </div>\n                <div className=\"data\"><h4>On an average you spend <span>Rs 1234</span> amount more than the city on \"What??\"</h4></div>\n            </div>\n\n            <div className=\"chart\">\n                <div className=\"data\"><h4>What are you breathing everyday?</h4>\n                <h4>Do you know what you are breathing everyday?</h4>\n                <h4>Do you that greener mobility/cleaner transp can improve air quality?</h4></div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <div className=\"card\">\n                                <div className=\"card-image\">\n                                    <img src={no2} ></img>\n                                </div>\n                                <b>{cityState.health.avg_annual_pollution.NO2}</b>\n                                <p>NO2</p> \n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"card\">\n                                <div className=\"card-image\">\n                                    <img src={pm25} ></img>\n                                </div>\n                                <b>{cityState.health.avg_annual_pollution['PM2.5']}</b>\n                                <p>PM2.5</p> \n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"card\">\n                                <div className=\"card-image\">\n                                    <img src={pm10} ></img>\n                                </div>\n                                <b>{cityState.health.avg_annual_pollution.PM10}</b>\n                                <p>PM10</p> \n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"card\">\n                                <div className=\"card-image\">\n                                    <img src={so2} ></img>\n                                </div>\n                                <b>{cityState.health.avg_annual_pollution.SO2}</b>\n                                <p>SO2</p> \n                            </div>\n                        </div>\n                        Avg annual pollution level \n                        \n\n                        {/* <Pie\n                            data={pieState}\n                            options={{\n                                title:{\n                                display:true,\n                                text:'Average Rainfall per month',\n                                fontSize:20\n                                },\n                                legend:{\n                                display:true,\n                                position:'right'\n                                }\n                            }}\n                        />\n                        Fuel con in buses\n\n                        <Doughnut\n                            data={pieState}\n                            options={{\n                                title:{\n                                display:true,\n                                text:'Average Rainfall per month',\n                                fontSize:20\n                                },\n                                legend:{\n                                display:true,\n                                position:'right'\n                            }\n                        }}\n                        /> */}\n                    </div>\n                </div>\n            </div>\n            \n            <div className=\"chart\">\n                <h4 className=\"data\">How much fuel do we consume?</h4>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <h2>675874 L / KM</h2> \n                        </div>\n                        <div className=\"col-md-6\">\n                            <h2>945663 L / KM</h2> \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Health;\n","import React from 'react'\nimport {Bar, HorizontalBar, Scatter} from 'react-chartjs-2';\nimport * as ChartAnnotation from 'chartjs-plugin-annotation'\n\nimport './Inclusion.scss'\n\nfunction Inclusion(props) {\n    const data = props.data;\n    const cityNameState = props.cityNameState\n    let internalState = {}\n\n    const state = {\n        labels: data.overall.spend_per_km_road.x , //['Total', 'Cycle', 'foot','Road Length'],\n        datasets: [\n          {\n            backgroundColor: '#ff2b5b',\n            data: data.overall.spend_per_km_road.y\n          }\n        ]\n    }\n\n    const scatterState = {\n        datasets: [{\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    const scatterSeatsSlumState = {\n        datasets: [{\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    function prepareScatterData() {\n        let res= []\n        let cityList = []\n\n        data.overall.public_transport_ridership.forEach((v, idx) => {\n            if(v === null || data.overall.annual_hh_expenditure[idx] == null || v < 24 || data.overall.annual_hh_expenditure[idx] < 100000) {\n                return\n            }\n            res.push({\n                'y': data.overall.annual_hh_expenditure[idx],\n                'x': v\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        scatterState['labels'] = cityList\n        scatterState.datasets[0]['data'] = res\n\n        return scatterState\n    }\n\n    function prepareScatterDataSeatsSlums() {\n        let res= []\n        let cityList = []\n        let mean_seats = 0\n        let mean_slum = 0\n        let cnt = 0\n        \n        data.overall.seats_per_lakh.forEach((v, idx) => {\n            if(v === null || data.overall.no_people_in_slums[idx] == null) {\n                return\n            }\n            mean_seats = mean_seats + v\n            mean_slum += data.overall.no_people_in_slums[idx]\n            cnt++\n            res.push({\n                'x': data.overall.no_people_in_slums[idx],\n                'y': v.toFixed(2)\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        internalState['scatterDataSeatsSlums'] = {\n            'mean_seats': mean_seats / cnt,\n            'mean_slum': mean_slum / cnt\n        }\n\n        scatterSeatsSlumState['labels'] = cityList\n        scatterSeatsSlumState.datasets[0]['data'] = res\n\n        return scatterSeatsSlumState\n    }\n\n    function spendingCredit() {\n        let spend = data[cityNameState].equality.spend_per_km_road * 100 - data.overall.mean_spend_per_km_road\n        if(spend < 0) {\n            return <h3>It’s time to catch up! <b>{cityNameState}</b> spends <b>Rs {Math.abs(spend.toFixed(1))} lakh</b> less than the average Smart City in India.</h3>\n        } else {\n            return <h3>Way to go! <b>{cityNameState}</b> spends <b>Rs {spend.toFixed(1)} lakh</b> more than the average Smart City in India.</h3>\n        }\n    }\n\n    function ridershipExpenseCredit() {\n        let hh = data[cityNameState].health.annual_hh_expenditure\n        let hh_mean = data.overall.mean_annual_hh_expenditure\n        let rider = data[cityNameState].overall.avg_daily_ridership\n        let rider_mean = data.overall.mean_public_transport_ridership\n        \n        if(hh <= hh_mean) {\n            if(rider <= rider_mean) {\n                return <h3>There’s room for improvement! <b>{cityNameState}</b> needs to build an accessible and inclusive public transport system.</h3>\n            } else {\n                return <h3>Great Work! <b>{cityNameState}’s</b> public transport is accessible for all! Residents with a lower annual household expenditure make more trips on public transport.</h3>\n            }\n        } else {\n            if(rider <= rider_mean) {\n                return <h3>In <b>{cityNameState}</b>, a higher annual household expenditure results in lower preference for public transport.</h3>\n            } else {\n                return <h3>Great work! <b>{cityNameState}</b> has successfully cultivated a dedicated public transport ridership! Despite their higher annual household expenditure, city name’s residents prefer public transport </h3>\n            }\n        }\n    }\n\n    function seatsSlumCredit() {\n        let seats = data[cityNameState].overall.seats_per_lakh\n        let seats_mean = data.overall.mean_seats_per_lakh\n        let slum = data[cityNameState].health.no_people_in_slums\n        let slum_mean = data.overall.mean_no_people_in_slums\n        \n        if(seats <= seats_mean) {\n            if(slum <= slum_mean) {\n                return <h3>You’re on the right track, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n            } else {\n                return <h3>There’s room to improve, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n            }\n        } else {\n            if(slum <= slum_mean) {\n                return <h3>You’re on the right track, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n            } else {\n                return <h3>You’ve got it right, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n\n            }\n        }\n    }\n\n    let seatSlumData = prepareScatterDataSeatsSlums()\n    \n    return(\n        <section className=\"Inclusion tab-content-box\">\n            <section>\n                <h3>Good quality road infrastructure is essential for improved mobility in your city!</h3>\n                <div className=\"row\">\n                    <div className=\"col-md-12 spending-bar\">\n                        <Bar\n                            data = {state}\n                            options={{\n                                title:{\n                                    display:true,\n                                    text:'Expenditure on road maintenance per km in the city',\n                                    fontSize: 12\n                                },\n                                legend:{\n                                    display: false,\n                                    position:'top'\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Spendings per Km in Lakh',\n                                        },\n                                        type: 'logarithmic'\n                                    }]\n                                }  \n                            }}\n                        />\n                        {spendingCredit()}\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"vertical-middle\">\n                            <h1>In 2019, {cityNameState} spent <span className=\"imp-unit\">{(data[cityNameState].equality.spend_per_km_road*100).toFixed(2)} lakh rupees per km</span> on road maintenance</h1>\n                        </div>\n                        \n\n                    \n                        \n                    </div>\n                </div>\n            </section>\n\n\n            <section>\n                <h3>The first step to a more inclusive city is accessible public transport for all! Let’s review where {cityNameState} is placed compared to the rest of urban India.</h3>\n\n                <Scatter\n                    data={prepareScatterData()}\n                    plugins={ChartAnnotation}\n                    options={{\n                        responsive:true,\n                        title:{\n                            display:true,\n                            text:'',\n                            fontSize: 12\n                        },\n                        legend:{\n                            display: false,\n                            position:'top'\n                        },\n                        scales: {\n                            xAxes: [{\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'Public Transport Ridership',\n                                },\n                                type: 'logarithmic'\n                            }],\n                            yAxes: [{\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'Avg Annual Household Expenditure (Rs)',\n                                },\n                                type: 'logarithmic'\n                            }]\n                        },\n                        tooltips: {\n                            callbacks: {\n                                label: function(tooltipItem, data) {\n                                    var label = data.labels[tooltipItem.index];\n                                    return label + ': (Ridership: ' + tooltipItem.xLabel + ', HH Expense: ' + tooltipItem.yLabel + ')';\n                                }\n                            }\n                        },\n                        annotation: {\n                            annotations: [\n                                {\n                                    // drawTime: \"afterDatasetsDraw\",\n                                    // id: \"hline\",\n                                    type: \"line\",\n                                    mode: \"horizontal\",\n                                    scaleID: \"y-axis-1\",\n                                    value: data.overall.mean_annual_hh_expenditure,\n                                    borderColor: \"black\",\n                                    borderWidth: 1,\n                                    label: {\n                                        backgroundColor: \"red\",\n                                        content: \"Mean Expenditure\",\n                                        enabled: true\n                                    }\n                                },\n                                {\n                                    // drawTime: \"afterDatasetsDraw\",\n                                    // id: \"hline\",\n                                    type: \"line\",\n                                    mode: \"vertical\",\n                                    scaleID: \"x-axis-1\",\n                                    value: data.overall.mean_public_transport_ridership,\n                                    borderColor: \"black\",\n                                    borderWidth: 1,\n                                    label: {\n                                        backgroundColor: \"red\",\n                                        content: \"Mean Ridership\",\n                                        enabled: true\n                                    }\n                                }\n                            ]\n                        }\n                    }}\n                />\n                {ridershipExpenseCredit()}\n            \n            </section>\n\n\n            <section>\n                {/* <h3>The first step to a more inclusive city is accessible public transport for all! Let’s review where {cityNameState} is placed compared to the rest of urban India.</h3>\n */}\n                <Scatter\n                    data={seatSlumData}\n                    plugins={ChartAnnotation}\n                    options={{\n                        responsive:true,\n                        title:{\n                            display:true,\n                            text:'',\n                            fontSize: 12\n                        },\n                        legend:{\n                            display: false,\n                            position:'top'\n                        },\n                        scales: {\n                            xAxes: [{\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'People residing in slums',\n                                },\n                                type: 'logarithmic'\n                            }],\n                            yAxes: [{\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: 'Seats per lakh population',\n                                },\n                                type: 'logarithmic'\n                            }]\n                        },\n                        tooltips: {\n                            callbacks: {\n                                label: function(tooltipItem, data) {\n                                    var label = data.labels[tooltipItem.index];\n                                    return label + ': (Seats: ' + tooltipItem.yLabel + ', People in Slum: ' + tooltipItem.xLabel + ')';\n                                }\n                            }\n                        },\n                        annotation: {\n                            annotations: [\n                                {\n                                    // drawTime: \"afterDatasetsDraw\",\n                                    // id: \"hline\",\n                                    type: \"line\",\n                                    mode: \"horizontal\",\n                                    scaleID: \"y-axis-1\",\n                                    value: internalState.scatterDataSeatsSlums.mean_seats,\n                                    borderColor: \"black\",\n                                    borderWidth: 1,\n                                    label: {\n                                        backgroundColor: \"red\",\n                                        content: \"Mean no of seats\",\n                                        enabled: true\n                                    }\n                                },\n                                {\n                                    // drawTime: \"afterDatasetsDraw\",\n                                    // id: \"hline\",\n                                    type: \"line\",\n                                    mode: \"vertical\",\n                                    scaleID: \"x-axis-1\",\n                                    value: internalState.scatterDataSeatsSlums.mean_slum,\n                                    borderColor: \"black\",\n                                    borderWidth: 1,\n                                    label: {\n                                        backgroundColor: \"red\",\n                                        content: \"Mean no of people in slums\",\n                                        enabled: true\n                                    }\n                                }\n                            ]\n                        }\n                    }}\n                />\n                {seatsSlumCredit()}\n            \n            </section>\n        </section>\n    )\n}\n\nexport default Inclusion;\n","import React from 'react';\nimport {Scatter, Doughnut} from 'react-chartjs-2';\nimport streetLight from './images/street-light.svg';\nimport safety from './images/safety.svg';\nimport roadSafety from './images/road.svg';\nimport car from './images/car.svg';\n\nimport './Security.scss';\n\nfunction Security(props) {\n    const cityState = props.cityState\n    const cityNameState = props.cityNameState\n    const data = props.data\n\n\n    var pieState = {\n        labels: ['Road Accident', 'Others'],\n        datasets: [{\n            label: 'Rainfall',\n            backgroundColor: [\n                '#ff2b5b',\n                '#bbb'\n            ],\n            hoverBackgroundColor: [\n            '#501800',\n            '#4B5000'\n            ],\n            data: [cityState.safety.percent_road_acc_fatalities.toFixed(2), 100-cityState.safety.percent_road_acc_fatalities.toFixed(2)]\n        }] \n    };\n\n    const scatterState = {\n        datasets: [{\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    function prepareScatterData() {\n        let res= []\n        let cityList = []\n\n        data.overall.crimes_against_women.forEach((v, idx) => {\n            if(v === null || data.overall.annual_hh_expenditure[idx] == null) {\n                return\n            }\n            res.push({\n                'x': data.overall.percent_roads_w_lights[idx],\n                'y': v\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        scatterState['labels'] = cityList\n        scatterState.datasets[0]['data'] = res\n\n        return scatterState\n    }\n\n    function lightNetworkLength() {\n        var lightNetwork = cityState.safety.percent_light_road_length.toFixed(2)\n        if (lightNetwork ===null) return;\n        var result=''\n        if(lightNetwork >75) {\n            result = 'Great work! You’re so close to the finish line, ' + cityNameState + '! Small steps towards improving street lighting can help build a safer city for all! '\n        }\n        else if(lightNetwork <=75 && lightNetwork >50) {\n            result = 'You’re on the right track, ' + cityNameState + '! Small steps towards improving street lighting can help build a safer city for all! '\n        }\n        else if(lightNetwork <=50) {\n            result = 'There’s room to improve, ' + cityNameState + '. Small steps towards improving street lighting can help build a safer city for all!'\n        }\n        return (\n            <div className=\"light-network-length-header\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"street-light\">\n                                <img src={streetLight} alt=\"Street light\" ></img>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"light-network\">\n                                <h4><span className=\"light-network-length\">{cityNameState}</span> has <span className=\"light-network-length imp-unit\">{cityState.overall.road_length} km</span> of roads with street lights, accounting for <span className=\"light-network-length imp-unit\">{lightNetwork}%</span> of the total road network length. </h4>  \n                            </div>\n                            <h4>{result}</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    function roadAccidentDeath() {\n        var roadAccident = cityState.safety.percent_road_acc_fatalities.toFixed(2)\n        if (roadAccident ===null) return;\n        var result=''\n        if(roadAccident >15) {\n            result = 'Red flag, ' + cityNameState + '! Small steps towards improving street lighting can help build a safer city for all! '\n        }\n        else if(roadAccident <=15 && roadAccident >11) {\n            result = 'There’s room to improve, ' + cityNameState + '! Help build a safer city by improving road safety for all. '\n        }\n        else if(roadAccident <=11) {\n            result = 'You’re on the right track, ' + cityNameState + '! Help build a safer city by improving road safety for all. '\n        }\n        return (\n            <div className=\"road-accident-fatalities-header\">\n                {console.log(result)}\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                        <Doughnut\n                            data={pieState}\n                            options={{\n                                title:{\n                                display:true,\n                                text:'Delhi Road Accidents',\n                                fontSize:20\n                                },\n                                legend:{\n                                display:true,\n                                position:'right'\n                                }\n                            }}\n                        />\n                        </div>\n                        <div className=\"col-md-6 \">\n                            <div className=\"vertical-middle\">\n                            <h4>In <span className=\"road-accident-fatalities\">{cityNameState}</span>, <span className=\"road-accident-fatalities imp-unit\">{roadAccident}%</span> of total deaths are due to road accident fatalities. </h4>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 road-safety\">\n                        <div className=\"safety\">\n                            <img src={roadSafety} alt=\"roadsafety\" ></img>\n                        </div>\n                        <h4>{result}</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <section class=\"tab-content-box\">\n            <div className=\"Security\"> \n                <div className=\"container\">\n\n                    <section className=\"sub-section-container\">\n                        <h1>How safe are your city streets?</h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"street-light\">\n                                    <img src={car} alt=\"Street light\" ></img>\n                                </div>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <h3 className=\"heading\">There’s no doubt that optimum street lighting significantly improves safety for drivers, riders, and pedestrians.</h3>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n                <section className=\"sub-section-container\">\n                    {lightNetworkLength()}\n                </section>\n                <section className=\"sub-section-container\">\n                    <h1 >Moreover, several studies have shown that improved street lighting can promote safety and security in public spaces.</h1>\n                \n                    <div>\n                        <Scatter\n                            data={prepareScatterData()}\n                            options={{\n                                title:{\n                                    display:true,\n                                    text:'',\n                                    fontSize: 12\n                                },\n                                legend:{\n                                    display: false,\n                                    position:'top'\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Crimes against women',\n                                        },\n                                        type: 'logarithmic'\n                                    }],\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: '% road km covered by street lights',\n                                        },\n                                        type: 'logarithmic'\n                                    }]\n                                },\n                                tooltips: {\n                                    callbacks: {\n                                        label: function(tooltipItem, data) {\n                                            var label = data.labels[tooltipItem.index];\n                                            return label + ': (Ridership: ' + tooltipItem.yLabel + ', HH Expense: ' + tooltipItem.xLabel + ')';\n                                        }\n                                    }\n                                }\n                            }}\n                        />\n                    </div>\n                </section>\n                <section className=\"sub-section-container\">\n                    <div className=\"heading\">\n                        <h1>Did you know that road injuries are among the top 10 leading causes of premature death in India?</h1>\n                        source: <a href=\"http://www.healthdata.org/india\">http://www.healthdata.org/india</a>\n                    </div>\n                    {roadAccidentDeath()}\n                </section>\n                <div className=\"footer\">\n                    <h5>A quick guide to building a safer city can be found here! <br></br><a href=\"https://smartnet.niua.org/content/57d27450-3f73-4cab-813e-2bbb2fb6eecb\">https://smartnet.niua.org/content/57d27450-3f73-4cab-813e-2bbb2fb6eecb</a></h5> \n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Security;","import React, {useState} from 'react';\nimport data from './compiled_data';\n\nimport Header from '../../views/header/Header'\nimport Overview from '../../views/overview/Overview'\nimport Health from '../../views/health/Health'\nimport Inclusion from '../../views/inclusion/Inclusion'\nimport Security from '../../views/security/Security'\n\nimport './MobilityDashboard.scss';\n\n\n// var ctx = document.getElementById('bar-chart').getContext('2d');\n// var stateBarChart = new Chart(ctx, {\n//     type: 'horizontalBar',\n//     data: data,\n//     options: {\n//         scales: {\n//             xAxes: [{\n//                 gridLines: {\n//                     offsetGridLines: true\n//                 }\n//             }]\n//         }\n//     }\n// });\n\n// const pieState = {\n//     labels: ['January', 'February', 'March',\n//              'April', 'May'],\n//     datasets: [\n//       {\n//         label: 'Rainfall',\n//         backgroundColor: [\n//           '#B21F00',\n//           '#C9DE00',\n//           '#2FDE00',\n//           '#00A6B4',\n//           '#6800B4'\n//         ],\n//         hoverBackgroundColor: [\n//         '#501800',\n//         '#4B5000',\n//         '#175000',\n//         '#003350',\n//         '#35014F'\n//         ],\n//         data: [60, 70, 40, 81, 56]\n//       }\n//     ]\n// }\n\n\nfunction MobilityDashboard() {\n\n    const [cityState, setCityState] = useState(data['Delhi']);\n    const [cityNameState, setCityNameState] = useState(data.city_list[0]);\n    const cityStatic = data.static;\n    const staticOverallData = data['overall']\n\n    console.log(data.city_list)\n\n    function cityChangeEvent(e) {\n        setCityNameState(e.target.value)\n        setCityState(data[e.target.value])\n    }\n    \n    return (\n        <>\n        <Header cityList={data.city_list} callback={cityChangeEvent}/>\n        <section className=\"MobilityDashboard container\">\n            {/* <div className=\"dropdown\">\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown button\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <a className=\"dropdown-item\" href=\"/#\">Action</a>\n                    <a className=\"dropdown-item\" href=\"/#\">Another action</a>\n                    <a className=\"dropdown-item\" href=\"/#\">Something else here</a>\n                </div>\n            </div> */}\n            {/* <h1 className=\"city-name\">Delhi</h1> */}\n            \n\n            <Overview cityState={cityState} cityNameState={cityNameState}/>\n\n\n            <ul className=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n                <li className=\"nav-item \" role=\"presentation\">\n                    <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#health\" role=\"tab\" aria-controls=\"home\" >City On The Move</a>\n                </li>\n                <li className=\"nav-item \" role=\"presentation\">\n                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#inclusion\" role=\"tab\" aria-controls=\"profile\" >City For All</a>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#security\" role=\"tab\" aria-controls=\"contact\" >Watchful City</a>\n                </li>\n            </ul>\n\n            <div className=\"tab-content\">\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"health\">\n                    <Health data={data} cityState={cityState} cityNameState={cityNameState} cityStatic={cityStatic}/>        \n                </div>\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"inclusion\">\n                    <Inclusion data={data} cityNameState={cityNameState}/>\n                </div>\n                \n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"security\">\n                    <Security data={data} cityNameState={cityNameState} cityState={cityState}/>\n                </div>\n            </div>\n        </section>\n        </>\n    )\n\n}\n\nexport default MobilityDashboard;","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\n\nimport MobilityDashboard from './components/mobility-dashboard/MobilityDashboard'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename='/'>\n        <Switch>\n        \n          <Route exact path=\"/\" component={MobilityDashboard} />\n        </Switch>\n\t\t  </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dust.ef0b04ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/pollution.af9101c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/air-pollution.a7d27908.svg\";","module.exports = __webpack_public_path__ + \"static/media/pm10.9ab2f467.svg\";","module.exports = __webpack_public_path__ + \"static/media/population.9ae381ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/area.6e53849c.svg\";","module.exports = __webpack_public_path__ + \"static/media/distance.d57048d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/seats.a367c6c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/ridership.9c0f1fe2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bus.0d5feb17.svg\";","module.exports = __webpack_public_path__ + \"static/media/bicycle.aa1d8506.svg\";","module.exports = __webpack_public_path__ + \"static/media/dog.ef856ee7.svg\";","module.exports = __webpack_public_path__ + \"static/media/health.47ff16db.svg\";","module.exports = __webpack_public_path__ + \"static/media/street-light.058fa45a.svg\";","module.exports = __webpack_public_path__ + \"static/media/road.d325d234.svg\";","module.exports = __webpack_public_path__ + \"static/media/car.00a6cdee.svg\";"],"sourceRoot":""}