{"version":3,"sources":["views/security/images/safety.svg","views/header/Header.jsx","views/overview/Overview.jsx","views/health/Health.jsx","views/inclusion/Inclusion.jsx","views/security/Security.jsx","components/mobility-dashboard/MobilityDashboard.jsx","App.js","serviceWorker.js","index.js","views/overview/img/population.svg","views/overview/img/area.svg","views/overview/img/distance.svg","views/overview/img/seats.svg","views/overview/img/ridership.svg","views/overview/img/bus.svg","views/health/images/dust.svg","views/health/images/pollution.svg","views/health/images/air-pollution.svg","views/health/images/pm10.svg","views/health/images/bicycle.svg","views/health/images/dog.svg","views/health/images/health.svg","views/health/images/pollution_car.svg","views/health/images/petrol.svg","views/health/images/gas.svg","views/security/images/street-light.svg","views/security/images/road.svg","views/security/images/car.svg"],"names":["module","exports","Header","props","className","FormControl","variant","margin","InputLabel","htmlFor","Select","native","onChange","e","callback","label","inputProps","name","id","res","cityList","forEach","v","idx","push","key","value","populateCities","Overview","cityState","cityNameState","console","log","area","Area","avg_daily_ridership","Ridership","bus_fleet","Bus","population","Pop","road_length","Len","seats_per_lakh","Seats","data","Object","keys","o","norm_value","src","toFixed","overallStats","overall","Health","cityStatic","state","labels","health","active_mobility","x","datasets","backgroundColor","y","scatterState","radius","pointHoverRadius","options","title","display","fontSize","legend","position","scales","xAxes","type","ticks","tick","index","message","headBangMessage","CycleImg","FootImg","percent_roads_are_cyclepath","percent_roads_are_footpath","cyclePath","replace","cycleTrackBenchmark","result","footpathBenchmark","HealthImg","health_expense_relative","relativeTerm","Math","abs","getHealthExpenseReport","norm_health_ex_vs_pcf","ex_hh","city_list","prepareScatterParkFootExpenditureData","plugins","ChartAnnotation","responsive","text","scaleLabel","labelString","yAxes","tooltips","callbacks","tooltipItem","xLabel","yLabel","annotation","annotations","mode","scaleID","borderColor","borderWidth","content","enabled","indicator","norm_health_ex","norm_active","long_way_msg","healthActiveBenchmark","href","target","no2","avg_annual_pollution","NO2","pm25","pm10","PM10","so2","SO2","DieselImg","fossil_fuel","per_capita","PetrolImg","per_km","mean_fuel_consumption_per_km","mean_fuel_consumption_per_capita","pollutionMessage","PollutionImg","height","Inclusion","internalState","spend_per_km_road","scatterSeatsSlumState","relativeComputation","meanValue","actualValue","round","diff","seatSlumData","mean_seats","mean_slum","cnt","no_people_in_slums","prepareScatterDataSeatsSlums","sort","l","r","prepareRoadSpendData","equality","spend","mean_spend_per_km_road","spendingCredit","public_transport_ridership","annual_hh_expenditure","prepareScatterData","mean_annual_hh_expenditure","mean_public_transport_ridership","hh","hh_mean","rider","rider_mean","ridershipExpenseCredit","scatterDataSeatsSlums","seats","seats_mean","mean_seats_per_lakh","slum","slum_mean","mean_no_people_in_slums","seatsSlumCredit","Security","pieState","hoverBackgroundColor","safety","percent_road_acc_fatalities","car","alt","lightNetwork","percent_light_road_length","streetLight","lightNetworkLength","crimes_against_women","percent_roads_w_lights","roadAccident","roadSafety","roadAccidentDeath","MobilityDashboard","useState","setCityState","setCityNameState","static","role","data-toggle","aria-controls","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.bbf8e2e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/safety.ae8ff4a8.svg\";","import React from 'react'\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport './Header.scss'\n\nfunction Header(props) {\n    function populateCities() {\n        let res = []\n        props.cityList.forEach((v, idx) => {\n            res.push(\n                <option key={idx} value={v}>{v}</option>\n            )\n        })\n        return res\n    }\n    return(\n        <header className=\"container Header\">\n            <div className=\"row\">\n                <div className=\"col-md-5 right-aligned\">\n                    <h1>Pravega - The Sectoral Dashboard for Urban Mobility in India</h1>\n                    <p className=\"learn-more\">To learn more, select your city from the dropdown</p>\n                    <FormControl variant=\"outlined\" className=\"header-box\" margin='dense'>\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">City</InputLabel>\n                        <Select\n                            native\n                            onChange={(e) => props.callback(e)}\n                            label=\"City\"\n                            inputProps={{\n                                name: 'city',\n                                id: 'outlined-age-native-simple',\n                            }}\n                        >\n                        {populateCities()}\n                        </Select>\n                    </FormControl>\n                </div>\n                <div className=\"col-md-7 left-aligned\">\n                    <h4>The Urban Mobility sectoral dashboard covers over 25 different indicators from across 10 sectors to present a holistic picture of mobility in 117 cities across India. Apart from providing an overview of the key mobility indicators, the dashboard also brings together cross-sectoral insights linking mobility to public health, equity, safety and overall quality of life in your city. Further, based on these insights, the dashboard suggests certain essential policy recommendations from the Government of India.</h4>\n                    \n                </div>\n            </div>\n            \n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react'\n\nimport Pop from './img/population.svg'\nimport Area from './img/area.svg'\nimport Len from './img/distance.svg'\nimport Seats from './img/seats.svg'\nimport Ridership from './img/ridership.svg'\nimport Bus from './img/bus.svg'\n\nimport './Overview.scss'\n\nfunction Overview(props) {\n    const cityState = props.cityState\n    const cityNameState = props.cityNameState\n\n    console.log(cityState)\n\n    const label = {\n        area: [\"City Area\", \"Sq Km Area\", 0, Area],\n        avg_daily_ridership: [\"Avg Daily Bus Ridership\", \"Nos\", 0, Ridership],\n        bus_fleet: [\"No of public buses\", \"Nos\", 0, Bus],\n        population: [\"Population\", \"Lakh People\", 2, Pop],\n        road_length: [\"Road Network Length\", \"Km\", 0, Len],\n        seats_per_lakh: [\"Seats in public transport\", \"Seats per lakh\", 0, Seats]\n    }\n\n    function overallStats(data) {\n        let res = []\n        Object.keys(data).forEach((o, idx) => {\n            if(data[o] == null || data[o] == 0) {\n                return\n            }\n            let norm_value = 0\n            if(o === 'population') {\n                norm_value = data[o] / 1e5\n            } else {\n                norm_value = data[o]\n            }\n            res.push(\n                <div key={idx} className=\"col-md-3\">\n                    <div className=\"card\">\n                        <small>{label[o][0]}</small>\n                        <img src={label[o][3]}/>\n                        <h3 className=\"digits\">{norm_value.toFixed(label[o][2])}</h3>\n                        <p>{label[o][1]}</p> \n                    </div>\n                </div>\n            )\n        })\n        return res\n    }\n\n    return (\n        <section className=\"Overview\">\n            <div className=\"city-facts\">\n                \n                {/* <h2>Do you know that Delhi has the largest road network with total road length {cityState.overall.road_length} kms?</h2><br/>\n\n                <h2>but it also has the highest fatality rate of XX %</h2> */}\n\n                <h2>Ready, set, go! Here’s the rundown on {cityNameState}</h2>\n                \n                <div className=\"container\">\n                    <div className=\"row\">\n                        {overallStats(cityState.overall)}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Overview;\n","import React from 'react'\nimport {HorizontalBar} from 'react-chartjs-2';\nimport {Scatter} from 'react-chartjs-2';\nimport * as ChartAnnotation from 'chartjs-plugin-annotation'\n\nimport pm25 from './images/dust.svg';\nimport so2 from './images/pollution.svg'\nimport no2 from './images/air-pollution.svg'\nimport pm10 from './images/pm10.svg'\n\nimport CycleImg from './images/bicycle.svg'\nimport FootImg from './images/dog.svg'\nimport HealthImg from './images/health.svg'\nimport PollutionImg from './images/pollution_car.svg'\nimport PetrolImg from './images/petrol.svg'\nimport DieselImg from './images/gas.svg'\n\nimport './Health.scss';\n\nfunction Health(props) {\n    const cityState = props.cityState\n    const cityNameState = props.cityNameState\n    const cityStatic = props.cityStatic\n    const data = props.data\n\n\n    const state = {\n        labels: cityState.health.active_mobility.x , \n        datasets: [\n          {\n            label: cityNameState,\n            backgroundColor: '#f6264c',\n            data: cityState.health.active_mobility.y\n          }\n        ]\n    }\n\n    const scatterState = {\n        datasets: [{\n            radius: 4,\n            pointHoverRadius: 8,\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    function footpathBenchmark() {\n        if (cityState.health['percent_roads_are_footpath']===null) return;\n        var result=''\n        if(cityState.health['percent_roads_are_footpath']>75) {\n            result = cityStatic.percent_roads_are_footpath[0].replace('[0]', cityNameState)\n        } \n        else if(cityState.health['percent_roads_are_footpath']<=75 && cityState.health['percent_roads_are_footpath']>50) {\n            result = cityStatic.percent_roads_are_footpath[1].replace('[0]', cityNameState)\n        }\n        else if(cityState.health['percent_roads_are_footpath']<=50 && cityState.health['percent_roads_are_footpath']>25) {\n            result = cityStatic.percent_roads_are_footpath[2].replace('[0]', cityNameState)\n        }\n        else if(cityState.health['percent_roads_are_footpath']<=25) {\n            result = cityStatic.percent_roads_are_footpath[3].replace('[0]', cityNameState)\n        }\n        return result\n    }\n\n    function cycleTrackBenchmark() {\n        let cyclePath = cityState.health['percent_roads_are_cyclepath']\n        if (cyclePath===null) {\n            return 'Zero!! That\\'s strange. Hopefully we can obtain this data someday.'\n        } else if(cyclePath > 75) {\n            return cityStatic.percent_roads_are_cyclepath[0].replace('[0]', cityNameState)} \n        else if(cyclePath <= 75 && cyclePath > 50) {\n            return cityStatic.percent_roads_are_cyclepath[1].replace('[0]', cityNameState)}\n        else if(cyclePath <= 50 && cyclePath > 25) {\n            return cityStatic.percent_roads_are_cyclepath[2].replace('[0]', cityNameState)}\n        else if(cyclePath <= 25) {\n            return cityStatic.percent_roads_are_cyclepath[3].replace('[0]', cityNameState)}\n\n    }\n\n    function healthActiveBenchmark() {\n        let norm_health_ex = cityState.health['norm_healnorm_health_ex']\n        let norm_active = cityState.health['norm_health_pcf']\n\n        let long_way_msg = 'You’ve got a long way to go, ' + cityNameState + '! Increasing opportunities for active mobility can help build a healthier city in the long run. '\n        let message, indicator;\n        if (norm_health_ex <= 0) {\n            if(norm_active <= 0) {\n                message = long_way_msg\n                indicator = <>{cityNameState} <span className=\"imp-unit\">falls short</span> in both the categories of annual health expenditure as well as activeness score</>\n            } else {\n                message = 'You’re on the right track, ' + cityNameState + '! Active spaces in your city are helping reduce residents’ expenditure on health'\n                indicator = <>{cityNameState} <span className=\"imp-unit\">falls short</span> on the annual health expenditure score but doing good for activeness score</>\n            }\n        } else {\n            if(norm_active <= 0) {\n                message = long_way_msg\n                indicator = <>{cityNameState} <span className=\"imp-unit\">falls short</span> on the activeness score but is above average for annual health expenditure</>\n            } else {\n                message = <><span className=\"imp-unit\">You’re a rockstar, {cityNameState}!</span> Active spaces in your city are helping reduce residents’ expenditure on health.</>\n                indicator = <>{cityNameState} <span className=\"imp-unit\">you are doing amazing</span> on both the indicators; activeness as well as annual health expenditure</>\n            }\n        }\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <h3>{indicator}</h3>\n                </div>\n                <div className=\"col-md-6\">\n                    <h3>{message}</h3>\n                </div>\n            </div>\n        )\n    }\n\n    function headBangMessage() {\n        let message = 'more than the city road network 🤯'\n        if(cityState.health.active_mobility.y[0] < cityState.health.active_mobility.y[1]) {\n            return <h5 className=\"head-bang\">Footpath length {message}</h5>\n        } else if(cityState.health.active_mobility.y[0] < cityState.health.active_mobility.y[2]) {\n            return <h5 className=\"head-bang\">Cycle path length {message}</h5>\n        }\n    }\n\n\n\n\n    function prepareScatterParkFootExpenditureData() {\n        let res= []\n        let cityList = []\n\n        data.overall.norm_health_ex_vs_pcf.x.forEach((v, idx) => {\n            let ex_hh = data.overall.norm_health_ex_vs_pcf.y[idx]\n            if(v === null || ex_hh == null) {\n                return\n            }\n            res.push({\n                'y': ex_hh,\n                'x': v\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        scatterState['labels'] = cityList\n        scatterState.datasets[0]['data'] = res\n\n        return scatterState\n    }\n\n    function getHealthExpenseReport() {\n        let health_expense_relative = cityState.health.health_expense_relative\n        let relativeTerm = 'more'\n        if(health_expense_relative === null || health_expense_relative == 0) {\n            return <h3>Sorry, we don't have this data for now.</h3>\n        } else if(health_expense_relative < 0) {\n            relativeTerm = 'less'\n        }\n        return <h3>{cityNameState}’s residents spend <span className=\"imp-unit\">Rs {Math.abs(health_expense_relative).toFixed(2)} {relativeTerm}</span> than the average household in other smart cities on health annually.</h3>\n    }\n\n    function pollutionMessage() {\n        let mean_per_km = cityState.overall.mean_fuel_consumption_per_km\n        let mean_per_capita = cityState.overall.mean_fuel_consumption_per_capita\n        let per_km = cityState.health.fossil_fuel.per_km || 0\n        let per_capita = cityState.health.fossil_fuel.per_capita || 0\n\n        let message;\n        if(per_km === 0 && per_capita === 0) {\n            message = '🤔 Maybe ' + cityNameState + ' has started using teleportation.'\n        } else {\n\n        }\n        return <h3>{message}</h3>\n    }\n\n    return(\n        <section className=\"tab-content-box\">\n            <div className=\"chart\">\n                <div className=\"container\">\n                    \n                    <section className=\"sub-section-container\">\n                        <h1>Is your city built for active mobility?</h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\" id=\"bar-chart\">\n                                <HorizontalBar\n                                data = {state}\n                                options={{\n                                    title:{\n                                        display:false,\n                                        fontSize:20\n                                    },\n                                    legend:{\n                                        display:false,\n                                        position:'top'\n                                    },\n                                    scales: {\n                                        xAxes: [{\n                                            type: 'logarithmic',\n                                            ticks: {\n                                                callback: function(tick, index, ticks) {\n                                                    return tick\n                                                }\n                                            }\n                                        }]\n                                    }\n                                }}\n                                />\n                            </div>\n                            <div className=\"col-md-6\" id=\"bar-chart\">\n                                <div className=\"vertical-middle\">\n                                    <h4>\n                                        {cityNameState} has {cityState.health.active_mobility.y[0]} kms of road network out of which <span className=\"imp-unit\">{cityState.health.active_mobility.y[1]} kms is footpath</span> and {cityState.health.active_mobility.y[2] || '0'} kms is cycle track\n                                        {headBangMessage()}\n                                    </h4>\n                                    \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row icon-container\">\n                            <div className=\"col-md-6\">\n                                <img src={CycleImg}/>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <img src={FootImg}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h3><span className=\"cycle-track-percentage\">{cityNameState}</span> has <span className=\"cycle-track-percentage imp-unit\">{(cityState.health.percent_roads_are_cyclepath || 0).toFixed(2)}%</span> of road network covered by cycle tracks.</h3>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h3><span className=\"footpath-percentage\">{cityNameState}</span> has <span className=\"imp-unit footpath-percentage\">{(cityState.health.percent_roads_are_footpath || 0).toFixed(2)}%</span> of road network covered by footpaths.</h3>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h4>{cycleTrackBenchmark()}</h4>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"vertical-middle\">\n                                    <h4>{footpathBenchmark()}</h4>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n                    <section className=\"sub-section-container\">\n                        <h1>Move more, save more!</h1> \n                        <h3>An active lifestyle is shown to reduce expenditure on health!</h3>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 icon-container\">\n                                <img src={HealthImg}/>\n                            </div>\n                            <div className=\"col-md-6\">\n                                {getHealthExpenseReport()}\n                            </div>\n                        </div>\n                        <div>\n                            <h5>Spaces for active mobility in the city include parks, cycle tracks and footpaths. Shown below is a comparison of normalised values for average annual household expenditure on health and the availability of spaces for active mobility in cities across India.</h5>\n                            <Scatter\n                                data={prepareScatterParkFootExpenditureData()}\n                                plugins={ChartAnnotation}\n                                options={{\n                                    responsive:true,\n                                    title:{\n                                        display:true,\n                                        text:'Active Spaces in a city Annual Household Expenditure vs (parks, cycle tracks, foot paths)',\n                                        fontSize: 12\n                                    },\n                                    legend:{\n                                        display: false,\n                                        position:'top'\n                                    },\n                                    scales: {\n                                        xAxes: [{\n                                            scaleLabel: {\n                                                display: true,\n                                                labelString: 'Normalised Score combining no. of parks, footpath and cycle track length',\n                                            }\n                                        }],\n                                        yAxes: [{\n                                            scaleLabel: {\n                                                display: true,\n                                                labelString: 'Normalised Annual Health Expenditure',\n                                            }\n                                        }]\n                                    },\n                                    tooltips: {\n                                        callbacks: {\n                                            label: function(tooltipItem, data) {\n                                                var label = data.labels[tooltipItem.index];\n                                                return label + ': (Activeness: ' + tooltipItem.xLabel.toFixed(2) + ', HH Expense: ' + tooltipItem.yLabel.toFixed(2) + ')';\n                                            }\n                                        }\n                                    },\n                                    annotation: {\n                                        annotations: [\n                                            {\n                                                // drawTime: \"afterDatasetsDraw\",\n                                                // id: \"hline\",\n                                                type: \"line\",\n                                                mode: \"horizontal\",\n                                                scaleID: \"y-axis-1\",\n                                                value: 0,\n                                                borderColor: \"black\",\n                                                borderWidth: 1,\n                                                label: {\n                                                    backgroundColor: \"red\",\n                                                    content: \"Mean Health Expenditure (Norm)\",\n                                                    enabled: true\n                                                }\n                                            },\n                                            {\n                                                // drawTime: \"afterDatasetsDraw\",\n                                                // id: \"hline\",\n                                                type: \"line\",\n                                                mode: \"vertical\",\n                                                scaleID: \"x-axis-1\",\n                                                value: 0,\n                                                borderColor: \"black\",\n                                                borderWidth: 1,\n                                                label: {\n                                                    backgroundColor: \"red\",\n                                                    content: \"Mean City Activeness (Norm)\",\n                                                    enabled: true\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }}\n                            />\n                        </div>\n                        {healthActiveBenchmark()}\n                        <hr/>\n                        <a href=\"http://mohua.gov.in/upload/uploadfiles/files/NMTGuidanceFINAL.pdf\" target=\"_blank\"><h3>Check out these guidelines to build a healthier city!</h3></a>\n\n                        <div className=\"short-excerpt\">\n                            <h3>Here’s a short excerpt for you</h3>\n                            <div className=\"row\">\n                                \n                                <div className=\"col-md-6 right-aligned\">\n                                    <h5>Promotion of walking and cycling in cities requires a multi-pronged approach which involves policy, planning, design and implementation. Some of the actionable steps taken by leading cities across the world which can help promote NMT usage are:</h5>\n                                    <small>Source: Ministry of Housing and Urban Affairs</small>\n                                </div>\n                                <div className=\"col-md-6 left-aligned\">\n                                    <ul>\n                                        <li>Provision of dedicated, high quality and user friendly facilities such as shaded pedestrian pathways and cycle tracks supported by public amenities.</li>\n                                        <li>Provision of a safe and secure environment such as parking of bicycles, street lighting and organized spaces for the informal sector.</li>\n                                        <li>Integration of walking and cycling facilities with transit.</li>\n                                        <li>Planning for compact and walkable neighbourhoods with mixed land uses.</li>\n                                        <li>Leveraging public events such as Car Free Day, Raahgiri, and other similar initiatives to promote the message of sustainable transportation.</li>\n                                        <li>Disincentivise usage of motorised modes by making motorists pay the full societal costs of their transport.</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    </section>\n\n                    <section className=\"sub-section-container\">\n                        <h1>Breath Easy with Green Mobility</h1>\n                        <h3>Investment in greener transport systems can improve the quality of air we breathe and help us live longer, healthier lives!</h3>\n                        <h4>Here are a few average annual pollutant for {cityNameState}.</h4>\n                        <div className=\"chart\">\n\n                            <div className=\"container\">\n                                <div className=\"row pollution-cards\">\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card \">\n                                            <div className=\"card-image\">\n                                                <img src={no2}></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution.NO2}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>NO2</p> \n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <img src={pm25} ></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution['PM2.5']}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>PM2.5</p> \n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <img src={pm10} ></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution.PM10}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>PM10</p> \n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <img src={so2} ></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{cityState.health.avg_annual_pollution.SO2.toFixed(0)}</h3>\n                                            <small>gm/cu.m</small>\n                                            <p>SO2</p> \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <hr/>\n                        <br/>\n                        <br/>\n\n                        <h3>Did you know that air pollution due to fossil fuels costs India $150 billion and a loss of 490 million workdays every year?</h3>\n                        <div className=\"chart\">\n\n                            <div className=\"container\">\n                                <div className=\"row pollution-cards\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"card \">\n                                            <div className=\"card-image\">\n                                                <img className=\"small-image\" src={DieselImg}></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{(cityState.health.fossil_fuel.per_capita || 0).toFixed(1)}</h3>\n                                            <small>Litre</small>\n                                            <p>Per Capita</p> \n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <img className=\"small-image\" src={PetrolImg} ></img>\n                                            </div>\n                                            <h3 className=\"digits pop_digits\">{(cityState.health.fossil_fuel.per_km || 0).toFixed(1)}</h3>\n                                            <small>Litre</small>\n                                            <p>Per Km</p> \n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                        </div>\n                        {pollutionMessage()}\n\n                        <a className=\"large-padding\" href=\"https://smartnet.niua.org/content/db8f78b4-5e68-4ffb-a603-4d7e7f4ab3c3\" target=\"_blank\"><h3>Join the fight and shift to non-fossil fuel based urban transport! Learn more about how to green your transport system</h3></a>\n\n                        <div className=\"short-excerpt\">\n                            <h3>Here’s a short excerpt for you</h3>\n                            <div className=\"row\">\n                                \n                                <div className=\"col-md-4\">\n                                    <img src={PollutionImg} height=\"200px\"/>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <p className=\"quote\">“The “Shift” component seeks to encourage a modal shift from motorized travel to more environment-friendly and energy-efficient modes. This can be achieved by promoting non-motorized (walking and cycling) and public transport. Initiatives to increase seamless, frequent and affordable public transport systems will lower the associated emissions per passenger-kilometer traveled, as well as reduce congestion while improving access and travel time.”</p>\n                                    <p>Source: Global Green Growth Institute</p>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Health;\n","import React from 'react'\nimport {Bar, HorizontalBar, Scatter} from 'react-chartjs-2';\nimport * as ChartAnnotation from 'chartjs-plugin-annotation'\n\nimport './Inclusion.scss'\n\nfunction Inclusion(props) {\n    const data = props.data;\n    const cityNameState = props.cityNameState\n    let internalState = {}\n\n    const state = {\n        labels: data.overall.spend_per_km_road.x ,\n        datasets: [\n          {\n            radius: 4,\n            pointHoverRadius: 8,\n            backgroundColor: '#ff2b5b',\n            data: data.overall.spend_per_km_road.y\n          }\n        ]\n    }\n\n    const scatterState = {\n        datasets: [{\n            radius: 4,\n            pointHoverRadius: 8,\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    const scatterSeatsSlumState = {\n        datasets: [{\n            radius: 4,\n            pointHoverRadius: 8,\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    function prepareRoadSpendData() {\n        let data = []\n        state.datasets[0].data.forEach((v, idx) => {\n            data.push({\n                x: state.labels[idx],\n                y: v\n            })\n        })\n        data.sort((l, r) => {\n            return l.y < r.y ? 1 : -1;\n        })\n\n        let x = [], y = []\n        data.forEach(v => {\n            x.push(v.x)\n            y.push(v.y.toFixed(2))\n        })\n\n        state.labels = x\n        state.datasets[0].data = y\n\n        return state\n    }\n\n    \n\n    function prepareScatterData() {\n        let res= []\n        let cityList = []\n\n        data.overall.public_transport_ridership.forEach((v, idx) => {\n            if(v === null || data.overall.annual_hh_expenditure[idx] == null || v < 24 || data.overall.annual_hh_expenditure[idx] < 100000) {\n                return\n            }\n            res.push({\n                'y': data.overall.annual_hh_expenditure[idx],\n                'x': v\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        scatterState['labels'] = cityList\n        scatterState.datasets[0]['data'] = res\n\n        return scatterState\n    }\n\n    function prepareScatterDataSeatsSlums() {\n        let res= []\n        let cityList = []\n        let mean_seats = 0\n        let mean_slum = 0\n        let cnt = 0\n        \n        data.overall.seats_per_lakh.forEach((v, idx) => {\n            if(v === null || data.overall.no_people_in_slums[idx] == null || v == 0 || data.overall.no_people_in_slums[idx] == 0) {\n                return\n            }\n            mean_seats = mean_seats + v\n            mean_slum += data.overall.no_people_in_slums[idx]\n            cnt++\n            res.push({\n                'x': data.overall.no_people_in_slums[idx],\n                'y': v.toFixed(2)\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        internalState['scatterDataSeatsSlums'] = {\n            'mean_seats': mean_seats / cnt,\n            'mean_slum': mean_slum / cnt\n        }\n\n        scatterSeatsSlumState['labels'] = cityList\n        scatterSeatsSlumState.datasets[0]['data'] = res\n\n        return scatterSeatsSlumState\n    }\n\n    function spendingCredit() {\n        let spend = data[cityNameState].equality.spend_per_km_road * 100 - data.overall.mean_spend_per_km_road\n        if(spend < 0) {\n            return <h3>It’s time to catch up! <b>{cityNameState}</b> spends <b className=\"imp-unit\">Rs {Math.abs(spend.toFixed(1))} lakh less</b> than the average Smart City in India.</h3>\n        } else {\n            return <h3>Way to go! <b>{cityNameState}</b> spends <b className=\"imp-unit\">Rs {spend.toFixed(1)} lakh more</b>  than the average Smart City in India.</h3>\n        }\n    }\n\n    function relativeComputation( meanValue, actualValue, round) {\n        let diff = actualValue - meanValue\n        if(diff < 0) {\n            return Math.abs(diff).toFixed(round) + ' less';\n        } else {\n            return diff.toFixed(round) + ' more';\n        }\n    }\n\n    function ridershipExpenseCredit() {\n        let hh = data[cityNameState].health.annual_hh_expenditure\n        let hh_mean = data.overall.mean_annual_hh_expenditure\n        let rider = data[cityNameState].overall.avg_daily_ridership\n        let rider_mean = data.overall.mean_public_transport_ridership\n        \n        if(hh <= hh_mean) {\n            if(rider <= rider_mean) {\n                return <h3>There’s room for improvement! <b>{cityNameState}</b> needs to build an accessible and inclusive public transport system.</h3>\n            } else {\n                return <h3>Great Work! <b>{cityNameState}’s</b> public transport is accessible for all! Residents with a lower annual household expenditure make more trips on public transport.</h3>\n            }\n        } else {\n            if(rider <= rider_mean) {\n                return <h3>In <b>{cityNameState}</b>, a higher annual household expenditure results in lower preference for public transport.</h3>\n            } else {\n                return <h3>Great work! <b>{cityNameState}</b> has successfully cultivated a dedicated public transport ridership! Despite their higher annual household expenditure, city name’s residents prefer public transport </h3>\n            }\n        }\n    }\n\n    function seatsSlumCredit() {\n        let seats = data[cityNameState].overall.seats_per_lakh\n        let seats_mean = data.overall.mean_seats_per_lakh\n        let slum = data[cityNameState].health.no_people_in_slums\n        let slum_mean = data.overall.mean_no_people_in_slums\n        \n        if(seats <= seats_mean) {\n            if(slum <= slum_mean) {\n                return <h3>You’re on the right track, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n            } else {\n                return <h3>There’s room to improve, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n            }\n        } else {\n            if(slum <= slum_mean) {\n                return <h3>You’re on the right track, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n            } else {\n                return <h3>You’ve got it right, <b>{cityNameState}</b>! Increasing the availability of affordable public transport is an essential factor for transforming lives and livelihoods of slum dwellers.</h3>\n\n            }\n        }\n    }\n\n    let seatSlumData = prepareScatterDataSeatsSlums()\n    \n    return(\n        <section className=\"Inclusion tab-content-box\">\n            <div className=\"container\">\n                <section className=\"sub-section-container\">\n                    <h1>Rally for Roads!</h1>\n                    <h3>Good quality road infrastructure is essential for improved mobility in your city!</h3>\n                    <div className=\"row\">\n                        <div className=\"col-md-12 spending-bar\">\n                            <Bar\n                                data = {prepareRoadSpendData()}\n                                options={{\n                                    title:{\n                                        display:true,\n                                        text:'Expenditure on road maintenance per km in the city',\n                                        fontSize: 12\n                                    },\n                                    legend:{\n                                        display: false,\n                                        position:'top'\n                                    },\n                                    scales: {\n                                        yAxes: [{\n                                            scaleLabel: {\n                                                display: true,\n                                                labelString: 'Spendings per Km in Lakh',\n                                            },\n                                            type: 'logarithmic'\n                                        }]\n                                    }  \n                                }}\n                            />\n                            \n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"vertical-middle\">\n                                <h1>In 2019, {cityNameState} spent <span className=\"imp-unit\">{(data[cityNameState].equality.spend_per_km_road*100).toFixed(2)} lakh rupees per km</span> on road maintenance</h1>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"vertical-middle\">\n                                {spendingCredit()}\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <section className=\"sub-section-container\">\n                    <h1>Don’t miss the bus!</h1>\n                    <h3>The first step to a more inclusive city is accessible public transport for all! Let’s review where {cityNameState} is placed compared to the rest of urban India.</h3>\n                    <div>\n                        <h5 className=\"description\">Affordable public transport is the first step. Does {cityNameState} make the cut?</h5>\n                        <Scatter\n                            data={prepareScatterData()}\n                            plugins={ChartAnnotation}\n                            options={{\n                                responsive:true,\n                                title:{\n                                    display:true,\n                                    text:'',\n                                    fontSize: 12\n                                },\n                                legend:{\n                                    display: false,\n                                    position:'top'\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Public Transport Ridership',\n                                        },\n                                        type: 'logarithmic'\n                                    }],\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Avg Annual Household Expenditure (Rs)',\n                                        },\n                                        type: 'logarithmic'\n                                    }]\n                                },\n                                tooltips: {\n                                    callbacks: {\n                                        label: function(tooltipItem, data) {\n                                            var label = data.labels[tooltipItem.index];\n                                            return label + ': (HH Expense: ' + tooltipItem.yLabel + ', Ridership: ' + tooltipItem.xLabel + ')';\n                                        }\n                                    }\n                                },\n                                annotation: {\n                                    annotations: [\n                                        {\n                                            // drawTime: \"afterDatasetsDraw\",\n                                            // id: \"hline\",\n                                            type: \"line\",\n                                            mode: \"horizontal\",\n                                            scaleID: \"y-axis-1\",\n                                            value: data.overall.mean_annual_hh_expenditure,\n                                            borderColor: \"black\",\n                                            borderWidth: 1,\n                                            label: {\n                                                backgroundColor: \"red\",\n                                                content: \"Mean Expenditure\",\n                                                enabled: true\n                                            }\n                                        },\n                                        {\n                                            // drawTime: \"afterDatasetsDraw\",\n                                            // id: \"hline\",\n                                            type: \"line\",\n                                            mode: \"vertical\",\n                                            scaleID: \"x-axis-1\",\n                                            value: data.overall.mean_public_transport_ridership,\n                                            borderColor: \"black\",\n                                            borderWidth: 1,\n                                            label: {\n                                                backgroundColor: \"red\",\n                                                content: \"Mean Ridership\",\n                                                enabled: true\n                                            }\n                                        }\n                                    ]\n                                }\n                            }}\n                        />\n                        <div className=\"row \">\n                            <div className=\"col-md-6 right-aligned\">\n                                <h4>The average daily ridership on public transport in an Indian Smart City is <span className=\"imp-unit\">{(data.overall.mean_public_transport_ridership).toFixed(2)} people</span> </h4>\n                            </div>\n                                <div className=\"col-md-6 left-aligned\">\n                                    <h4>{cityNameState} has <span className=\"imp-unit\">{relativeComputation(data.overall.mean_public_transport_ridership, data[cityNameState].overall.avg_daily_ridership || 0, 0)}</span> public transport riders than average. </h4>\n                                </div>\n                            <div className=\"col-md-6 right-aligned\">\n                                <h4>The average annual household expenditure in an Indian Smart City is <span className=\"imp-unit\">Rs. {(data.overall.mean_annual_hh_expenditure).toFixed(2)}</span></h4>\n                            </div>\n                            <div className=\"col-md-6 left-aligned\">\n                                <h4>{cityNameState}’s residents spend <span className=\"imp-unit\">Rs {relativeComputation(data.overall.mean_annual_hh_expenditure, data[cityNameState].health.annual_hh_expenditure || 0, 2)}</span> than average. </h4>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    {ridershipExpenseCredit()}\n                \n                </section>\n\n                <section className=\"sub-section-container\">\n                    <h1>Move Forward Together!!</h1>\n                    <div>\n                        <h5>Let’s take a second look. The public transport supply in {cityNameState} is compared to the population of low income residents in the city. Here, the number of slum dwellers is used as a suitable proxy for low income residents. </h5>\n                        <Scatter\n                            data={seatSlumData}\n                            plugins={ChartAnnotation}\n                            options={{\n                                responsive:true,\n                                title:{\n                                    display:true,\n                                    text:'',\n                                    fontSize: 12\n                                },\n                                legend:{\n                                    display: false,\n                                    position:'top'\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'People residing in slums',\n                                        },\n                                        type: 'logarithmic'\n                                    }],\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Seats per lakh population',\n                                        },\n                                        type: 'logarithmic'\n                                    }]\n                                },\n                                tooltips: {\n                                    callbacks: {\n                                        label: function(tooltipItem, data) {\n                                            var label = data.labels[tooltipItem.index];\n                                            return label + ': (Seats: ' + tooltipItem.yLabel + ', People in Slum: ' + tooltipItem.xLabel + ')';\n                                        }\n                                    }\n                                },\n                                annotation: {\n                                    annotations: [\n                                        {\n                                            // drawTime: \"afterDatasetsDraw\",\n                                            // id: \"hline\",\n                                            type: \"line\",\n                                            mode: \"horizontal\",\n                                            scaleID: \"y-axis-1\",\n                                            value: internalState.scatterDataSeatsSlums.mean_seats,\n                                            borderColor: \"black\",\n                                            borderWidth: 1,\n                                            label: {\n                                                backgroundColor: \"red\",\n                                                content: \"Mean no of seats\",\n                                                enabled: true\n                                            }\n                                        },\n                                        {\n                                            // drawTime: \"afterDatasetsDraw\",\n                                            // id: \"hline\",\n                                            type: \"line\",\n                                            mode: \"vertical\",\n                                            scaleID: \"x-axis-1\",\n                                            value: internalState.scatterDataSeatsSlums.mean_slum,\n                                            borderColor: \"black\",\n                                            borderWidth: 1,\n                                            label: {\n                                                backgroundColor: \"red\",\n                                                content: \"Mean no of people in slums\",\n                                                enabled: true\n                                            }\n                                        }\n                                    ]\n                                }\n                            }}\n                        />\n                        <div className=\"row \">\n                            <div className=\"col-md-6 right-aligned\">\n                                <h4>The average number of seats available on public transport per lakh residents in an Indian Smart City is <span className=\"imp-unit\">{(data[cityNameState].overall.seats_per_lakh || 0).toFixed(1)}</span> </h4>\n                            </div>\n                                <div className=\"col-md-6 left-aligned\">\n                                    <h4>{cityNameState} has <span className=\"imp-unit\">{relativeComputation(internalState.scatterDataSeatsSlums.mean_seats, data[cityNameState].overall.seats_per_lakh || 0, 0)}</span> available seats per lakh residents on public transport than average. </h4>\n                                </div>\n                            <div className=\"col-md-6 right-aligned\">\n                                <h4>The average number of slum dwellers in an Indian Smart City is <span className=\"imp-unit\">{data[cityNameState].health.no_people_in_slums || 0}</span></h4>\n                            </div>\n                            <div className=\"col-md-6 left-aligned\">\n                                <h4>{cityNameState} has <span className=\"imp-unit\">{relativeComputation(internalState.scatterDataSeatsSlums.mean_slum, data[cityNameState].health.no_people_in_slums || 0, 0)}</span> residents than average living in slums. </h4>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    {seatsSlumCredit()}\n                    <br/>\n                    <a href=\"https://smartnet.niua.org/content/dd309560-d242-401d-8162-e0e7fd502a9e\" target=\"_blank\"><h3>Here’s how {cityNameState} can move forward together! </h3></a>\n\n                    <div className=\"short-excerpt\">\n                        <div className=\"row\">\n                            \n                            <div className=\"col-md-5 right-aligned\">\n                                <h3 className=\"no-margin-top\">Here’s a short excerpt for you</h3>\n                            </div>\n                            <div className=\"col-md-7 left-aligned\">\n                                <p className=\"quote\">“Special attention should be given to improving access to efficient public transit in India to ensure that all citizens have reliable and affordable transportation. As public transit operates on fixed routes and schedules, improving first- and last-mile connectivity will be paramount in maintaining, or improving India’s existing mode share of public transit. Improving public transit efficiency and convenience with route rationalization and better vehicles will also support public transit.\"</p>\n                            </div>\n                        </div>\n                    </div>\n                \n                </section>\n                \n            </div>\n        </section>\n    )\n}\n\nexport default Inclusion;\n","import React from 'react';\nimport {Scatter, Doughnut} from 'react-chartjs-2';\nimport streetLight from './images/street-light.svg';\nimport safety from './images/safety.svg';\nimport roadSafety from './images/road.svg';\nimport car from './images/car.svg';\n\nimport './Security.scss';\n\nfunction Security(props) {\n    const cityState = props.cityState\n    const cityNameState = props.cityNameState\n    const data = props.data\n\n\n    var pieState = {\n        labels: ['Road Accident', 'Others'],\n        datasets: [{\n            label: 'Rainfall',\n            backgroundColor: [\n                '#ff2b5b',\n                '#bbb'\n            ],\n            hoverBackgroundColor: [\n            '#501800',\n            '#4B5000'\n            ],\n            data: [cityState.safety.percent_road_acc_fatalities.toFixed(2), 100-cityState.safety.percent_road_acc_fatalities.toFixed(2)]\n        }] \n    };\n\n    const scatterState = {\n        datasets: [{\n            backgroundColor: '#ff2b5b',\n        }]\n    }\n\n    function prepareScatterData() {\n        let res= []\n        let cityList = []\n\n        data.overall.crimes_against_women.forEach((v, idx) => {\n            if(v === null || data.overall.annual_hh_expenditure[idx] == null) {\n                return\n            }\n            res.push({\n                'x': data.overall.percent_roads_w_lights[idx],\n                'y': v\n            })\n            cityList.push(data.city_list[idx])\n        })\n\n        scatterState['labels'] = cityList\n        scatterState.datasets[0]['data'] = res\n\n        return scatterState\n    }\n\n    function lightNetworkLength() {\n        var lightNetwork = cityState.safety.percent_light_road_length.toFixed(2)\n        if (lightNetwork ===null) return;\n        var result=''\n        if(lightNetwork >75) {\n            result = 'Great work! You’re so close to the finish line, ' + cityNameState + '! Small steps towards improving street lighting can help build a safer city for all! '\n        }\n        else if(lightNetwork <=75 && lightNetwork >50) {\n            result = 'You’re on the right track, ' + cityNameState + '! Small steps towards improving street lighting can help build a safer city for all! '\n        }\n        else if(lightNetwork <=50) {\n            result = 'There’s room to improve, ' + cityNameState + '. Small steps towards improving street lighting can help build a safer city for all!'\n        }\n        return (\n            <div className=\"light-network-length-header\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"street-light\">\n                                <img src={streetLight} alt=\"Street light\" ></img>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"light-network\">\n                                <h4><span className=\"light-network-length\">{cityNameState}</span> has <span className=\"light-network-length imp-unit\">{cityState.overall.road_length} km</span> of roads with street lights, accounting for <span className=\"light-network-length imp-unit\">{lightNetwork}%</span> of the total road network length. </h4>  \n                            </div>\n                            <h4>{result}</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    function roadAccidentDeath() {\n        var roadAccident = cityState.safety.percent_road_acc_fatalities.toFixed(2)\n        if (roadAccident ===null) return;\n        var result=''\n        if(roadAccident >15) {\n            result = 'Red flag, ' + cityNameState + '! Small steps towards improving street lighting can help build a safer city for all! '\n        }\n        else if(roadAccident <=15 && roadAccident >11) {\n            result = 'There’s room to improve, ' + cityNameState + '! Help build a safer city by improving road safety for all. '\n        }\n        else if(roadAccident <=11) {\n            result = 'You’re on the right track, ' + cityNameState + '! Help build a safer city by improving road safety for all. '\n        }\n        return (\n            <div className=\"road-accident-fatalities-header\">\n                {console.log(result)}\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                        <Doughnut\n                            data={pieState}\n                            options={{\n                                title:{\n                                display:false,\n                                text:'',\n                                fontSize:20\n                                },\n                                legend:{\n                                display:true,\n                                position:'right'\n                                }\n                            }}\n                        />\n                        </div>\n                        <div className=\"col-md-6 \">\n                            <div className=\"vertical-middle\">\n                            <h4>In <span className=\"road-accident-fatalities\">{cityNameState}</span>, <span className=\"road-accident-fatalities imp-unit\">{roadAccident}%</span> of total deaths are due to road accident fatalities. </h4>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 road-safety\">\n                        <div className=\"safety\">\n                            <img src={roadSafety} alt=\"roadsafety\" ></img>\n                        </div>\n                        <h4>{result}</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <section className=\"tab-content-box\">\n            <div className=\"Security\"> \n                <div className=\"container\">\n\n                    <section className=\"sub-section-container\">\n                        <h1>Light Up! </h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h2> How safe are your city streets?</h2>\n                                <h3 className=\"heading\">There’s no doubt that optimum street lighting significantly improves safety for drivers, riders, and pedestrians.</h3>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"car\">\n                                    <img src={car} alt=\"Street light\" ></img>\n                                </div>\n                            </div>\n                        </div>\n                        <hr></hr>\n                        {lightNetworkLength()}\n                    </section>\n                </div>\n                <section className=\"sub-section-container\">\n                    <h1 >Moreover, several studies have shown that improved street lighting can promote safety and security in public spaces.</h1>\n                \n                    <div>\n                        <Scatter\n                            data={prepareScatterData()}\n                            options={{\n                                title:{\n                                    display:true,\n                                    text:'',\n                                    fontSize: 12\n                                },\n                                legend:{\n                                    display: false,\n                                    position:'top'\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Crimes against women',\n                                        },\n                                        type: 'logarithmic'\n                                    }],\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: '% road km covered by street lights',\n                                        },\n                                        type: 'logarithmic'\n                                    }]\n                                },\n                                tooltips: {\n                                    callbacks: {\n                                        label: function(tooltipItem, data) {\n                                            var label = data.labels[tooltipItem.index];\n                                            return label + ': (Crime against women: ' + tooltipItem.yLabel + ', % Street light: ' + tooltipItem.xLabel + ')';\n                                        }\n                                    }\n                                }\n                            }}\n                        />\n                    </div>\n                </section> \n                <section className=\"sub-section-container\">   \n                    <div className=\"heading\">\n                        <h1>The Value of a Life</h1>\n                        <h3>Did you know that road injuries are among the top 10 leading causes of premature death in India?</h3>\n                        <a href=\"http://www.healthdata.org/india\">source: healthdata.org</a>\n                    </div>\n                    {roadAccidentDeath()}\n                    <hr></hr>\n                    <div className=\"footer\">\n                        <a href=\"https://smartnet.niua.org/content/57d27450-3f73-4cab-813e-2bbb2fb6eecb\"><h3>A quick guide to building a safer city can be found here! </h3></a> \n                    </div>\n                    <div className=\"short-excerpt\">\n                        <div className=\"row\">\n                            <div className=\"col-md-5\">\n                                <h3>Here’s a short excerpt for you</h3>\n                            </div>\n                            <div className=\"col-md-7\">\n                                <p className=\"quote\">“Clearly, the road injury problems that generate at urban level cannot be entirely solved without measurements specific for urban areas. Most of the urban injury accidents and fatalities involve vulnerable road users because of being unprotected from motorized traffic and existence of organized road spaces only for facilitating the movements of motorized vehicles and not vulnerable road users who are mostly pedestrians, cyclists and two wheelers.”</p>\n                                <p>Source: Ministry of Urban Development</p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </section>\n    )\n}\n\nexport default Security;","import React, {useState} from 'react';\nimport data from './compiled_data';\n\nimport Header from '../../views/header/Header'\nimport Overview from '../../views/overview/Overview'\nimport Health from '../../views/health/Health'\nimport Inclusion from '../../views/inclusion/Inclusion'\nimport Security from '../../views/security/Security'\n\nimport './MobilityDashboard.scss';\n\n\n// var ctx = document.getElementById('bar-chart').getContext('2d');\n// var stateBarChart = new Chart(ctx, {\n//     type: 'horizontalBar',\n//     data: data,\n//     options: {\n//         scales: {\n//             xAxes: [{\n//                 gridLines: {\n//                     offsetGridLines: true\n//                 }\n//             }]\n//         }\n//     }\n// });\n\n// const pieState = {\n//     labels: ['January', 'February', 'March',\n//              'April', 'May'],\n//     datasets: [\n//       {\n//         label: 'Rainfall',\n//         backgroundColor: [\n//           '#B21F00',\n//           '#C9DE00',\n//           '#2FDE00',\n//           '#00A6B4',\n//           '#6800B4'\n//         ],\n//         hoverBackgroundColor: [\n//         '#501800',\n//         '#4B5000',\n//         '#175000',\n//         '#003350',\n//         '#35014F'\n//         ],\n//         data: [60, 70, 40, 81, 56]\n//       }\n//     ]\n// }\n\n\nfunction MobilityDashboard() {\n\n    const [cityState, setCityState] = useState(data['Delhi']);\n    const [cityNameState, setCityNameState] = useState(data.city_list[0]);\n    const cityStatic = data.static;\n    const staticOverallData = data['overall']\n\n    console.log(data.city_list)\n\n    function cityChangeEvent(e) {\n        setCityNameState(e.target.value)\n        setCityState(data[e.target.value])\n    }\n    \n    return (\n        <>\n        <Header cityList={data.city_list} callback={cityChangeEvent}/>\n        <section className=\"MobilityDashboard container\">\n            {/* <div className=\"dropdown\">\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown button\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <a className=\"dropdown-item\" href=\"/#\">Action</a>\n                    <a className=\"dropdown-item\" href=\"/#\">Another action</a>\n                    <a className=\"dropdown-item\" href=\"/#\">Something else here</a>\n                </div>\n            </div> */}\n            {/* <h1 className=\"city-name\">Delhi</h1> */}\n            \n\n            <Overview cityState={cityState} cityNameState={cityNameState}/>\n\n\n            <ul className=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n                <li className=\"nav-item \" role=\"presentation\">\n                    <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#health\" role=\"tab\" aria-controls=\"home\" >City On The Move</a>\n                </li>\n                <li className=\"nav-item \" role=\"presentation\">\n                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#inclusion\" role=\"tab\" aria-controls=\"profile\" >City For All</a>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#security\" role=\"tab\" aria-controls=\"contact\" >Watchful City</a>\n                </li>\n            </ul>\n\n            <div className=\"tab-content\">\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"health\">\n                    <Health data={data} cityState={cityState} cityNameState={cityNameState} cityStatic={cityStatic}/>        \n                </div>\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"inclusion\">\n                    <Inclusion data={data} cityNameState={cityNameState}/>\n                </div>\n                \n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"security\">\n                    <Security data={data} cityNameState={cityNameState} cityState={cityState}/>\n                </div>\n            </div>\n        </section>\n        </>\n    )\n\n}\n\nexport default MobilityDashboard;","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\n\nimport MobilityDashboard from './components/mobility-dashboard/MobilityDashboard'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename='/'>\n        <Switch>\n        \n          <Route exact path=\"/\" component={MobilityDashboard} />\n        </Switch>\n\t\t  </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/population.9ae381ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/area.6e53849c.svg\";","module.exports = __webpack_public_path__ + \"static/media/distance.d57048d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/seats.a367c6c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/ridership.9c0f1fe2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bus.0d5feb17.svg\";","module.exports = __webpack_public_path__ + \"static/media/dust.ef0b04ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/pollution.af9101c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/air-pollution.a7d27908.svg\";","module.exports = __webpack_public_path__ + \"static/media/pm10.9ab2f467.svg\";","module.exports = __webpack_public_path__ + \"static/media/bicycle.aa1d8506.svg\";","module.exports = __webpack_public_path__ + \"static/media/dog.ef856ee7.svg\";","module.exports = __webpack_public_path__ + \"static/media/health.47ff16db.svg\";","module.exports = __webpack_public_path__ + \"static/media/pollution_car.a277c682.svg\";","module.exports = __webpack_public_path__ + \"static/media/petrol.20e24756.svg\";","module.exports = __webpack_public_path__ + \"static/media/gas.5259dbac.svg\";","module.exports = __webpack_public_path__ + \"static/media/street-light.058fa45a.svg\";","module.exports = __webpack_public_path__ + \"static/media/road.7a8d3d9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/car.00a6cdee.svg\";"],"sourceRoot":""}